propel:
  general:
      # The name of your project.
      project: AnalizoExchangeAPITester
      # version : make sure you use suffix -DEV or -PROD to indicate the type of environment!
      version: 0.1

  exclude_tables:
      # you can use wildcard as you wish
      #- /name of table to ignore/|string

  ### Directories and Filenames ###
  paths:
      # Directory where the project files (`schema.xml`, etc.) are located.
      # Default value is current path #
      #projectDir:  {current_path}|string

      # The directory where Propel expects to find your `schema.xml` file.
      schemaDir: model

      # The directory where Propel should output classes, sql, config, etc.
      # Default value is current path #
      outputDir: model

      # The directory where Propel should output generated object model classes.
      phpDir: model/generated-classes

      # The directory where Propel should output the compiled runtime configuration.
      phpConfDir: model/generated-conf

      # The directory where Propel should output the generated DDL (or data insert statements, etc.)
      sqlDir: model/generated-sql

      # Directory in which your composer.json resides
      #composerDir: {empty}|string

  ## All Database settings ##
  database:
      # All database sources
      connections:
          analizoexchangeapitester:
              adapter: mysql
              # Connection class. One of the Propel\Runtime\Connection classes
              #classname: Propel\Runtime\Connection\ProfilerConnectionWrapper
              # The PDO dsn
              dsn: mysql:host=localhost;dbname=analizoexchangeapitester
              user: Analizo
              password: Analizo
              # Driver options. See http://www.php.net/manual/en/pdo.construct.php
              # options must be passed to the contructor of the connection object
              #options: {empty}|array
              # See http://www.php.net/manual/en/pdo.getattribute.php
              # Attributes are set via `setAttribute()` method, after the connection object is created
              #attributes: {empty}|array
              #Propel specific settings
              settings: 
                charset: utf8
              #Array of queries to run when the database connection is initialized
              #query: {empty}|array
              #slaves:
              #    - dsn: mysql:host=slave-host-1;dbname=bookstore
              #    - ......
          logging:
              adapter: mysql
              # Connection class. One of the Propel\Runtime\Connection classes
              #classname: Propel\Runtime\Connection\ProfilerConnectionWrapper
              # The PDO dsn
              dsn: mysql:host=localhost;dbname=analizoexchangeapitester
              user: Analizo
              password: Analizo
              settings: 
                charset: utf8

      ## Specific adapter settings
      adapters:
          ## Mysql ##
          mysql:
              #Default table type
              #tableType: {InnoDB}|MyIsam

              # Keyword used to specify the table engine in the CREATE SQL statement.
              # Defaults to 'ENGINE', users of MYSQL < 5 should use 'TYPE' instead.
              #tableEngineKeyword: {ENGINE}|TYPE

          ## Sqlite ##
          sqlite:
              #foreignKey: {empty}|string
              #tableAlteringWorkaround: {empty}|boolean

          ## Oracle ##
          oracle:
              #autoincrementSequencePattern: ${table}_SEQ

  ## Migration settings ##
  migrations:
      # Whether to specify PHP names that are the same as the column names.
      #samePhpName: {false}|true

      # Whether to add the vendor info. It does provide additional information (such as full-text indexes) which can
      # affect the generation of the DDL from the schema.
      #addVendorInfo: {false}|true

      # The name of migrations table
      #tableName: {propel_migration}|string

      # The name of the parser class
      # If you leave this property blank, Propel looks for an appropriate parser class, based on platform: i.e.
      # if the platform is `MysqlPlatform` then parser is `\Propel\Generator\Reverse\MysqlSchemaParser`
      #parserClass: {empty}|string

  ## Reverse settings
  reverse:
    # The connection to use to reverse the database
    connection: default

    # Reverse parser class can be different from migration one
    # If you leave this property blank, Propel looks for an appropriate parser class, based on platform: i.e.
    # if the platform is `MysqlPlatform` then parser is `\Propel\Generator\Reverse\MysqlSchemaParser`
    #parserClass: {empty}|string

  ## Runtime settings ##
  runtime:
      defaultConnection: analizoexchangeapitester
      # Datasources as defined in database.connections
      # This section affects config:convert command
      #connections:
      #   - default

      ## Log and loggers definitions ##
      # For `type` and `level` options see Monolog documentation https://github.com/Seldaek/monolog
      log:
        defaultLogger:
          type: stream
          path: log/propel.log
          level: 100
      #Monolog levels:
        #DEBUG (100): Detailed debug information.
        #INFO (200): Interesting events. Examples: User logs in, SQL logs.
        #NOTICE (250): Normal but significant events.
        #WARNING (300): Exceptional occurrences that are not errors. Examples: Use of deprecated APIs, poor use of an API, undesirable things that are not necessarily wrong.
        #ERROR (400): Runtime errors that do not require immediate action but should typically be logged and monitored.
        #CRITICAL (500): Critical conditions. Example: Application component unavailable, unexpected exception.
        #ALERT (550): Action must be taken immediately. Example: Entire website down, database unavailable, etc. This should trigger the SMS alerts and wake you up.
        #EMERGENCY (600): Emergency: system is unusable.

      ## Profiler configuration ##
      # To enable the profiler for a connection, set the `classname` option to \Propel\Runtime\Connection\ProfilerConnectionWrapper
      # see: http://propelorm.org/documentation/07-logging.html
        # In addition to the executed queries, you can ask Propel to log the execution time for each query, the memory consumption, and more. To enable profiling, change the connection class name to Propel\Runtime\Connection\ProfilerConnectionWrapper
      #profiler:
        #classname: {\Propel\Runtime\Util\Profiler}|string
        #slowTreshold: 0.1
        #details:
        #  time:
        #    precision: {3}|integer
        #    pad: {8}|integer
        #  memory:
        #    precision: {3}|integer
        #    pad: {8}|integer          
        #  memDelta:
        #    precision: {3}|integer
        #    pad: {8}|integer          
        #  memPeak:
        #    precision: {3}|integer
        #    pad: {8}|integer          
        #innerGlue: {":"}|integer
        #outerGlue: {"|"}|integer

  ## Generator settings ##
  generator:
      #defaultConnection: /One of the connections defined in database section/
      # Datasources as defined in database.connections
      #connections:
      #    - default

      # Add a prefix to all the table names in the database.
      # This does not affect the tables phpName.
      # This setting can be overridden on a per-database basis in the schema.
      #tablePrefix: {empty}|string

      # Platform class name
      #platformClass: {Propel\Generator\Platform\MysqlPlatform}|string

      # The package to use for the generated classes.
      # This affects the value of the @package phpdoc tag, and it also affects
      # the directory that the classes are placed in. By default this will be
      # the same as the project. Note that the target package (and thus the target
      # directory for generated classes) can be overridden in each `<database>` and
      # `<table>` element in the XML schema.
      #targetPackage: {empty}|string

      # Whether to join schemas using the same database name into a single schema.
      # This allows splitting schemas in packages, and referencing tables in another
      # schema (but in the same database) in a foreign key. Beware that database
      # behaviors will also be joined when this parameter is set to true.
      #packageObjectModel: {true}|false

      # If you use namespaces in your schemas, this setting tells Propel to use the
      # namespace attribute for the package. Consequently, the namespace attribute
      # will also stipulate the subdirectory in which model classes get generated.
      #namespaceAutoPackage: {true}|false

      #schema:
          # The schema base name
          #basename: {schema}|string
          # If your XML schema specifies SQL schemas for each table, you can copy the
          # value of the `schema` attribute to other attributes.
          # To copy the schema attribute to the package attribute, set this to true
          #autoPackage: {false}|true
          # To copy the schema attribute to the namespace attribute, set this to true
          #autoNamespace: {false}|true
          # To use the schema attribute as a prefix to all model phpNames, set this to true
          #autoPrefix: {false}|true

          # Whether to transform the XML schema using the XSL file.
          # This was used in previous Propel versions to clean up the schema, but tended
          # to hide problems in the schema. It is disabled by default since Propel 1.5.
          # The default XSL file is located under `resources/xsl/database.xsl`
          # and you can use a custom XSL file by changing the `propel.schema.xsl.file`
          # property.
          #transform: {false}|true

      ## Date/Time settings ##
      dateTime:

          # Enable full use of the DateTime class.
          # Setting this to true means that getter methods for date/time/timestamp
          # columns will return a DateTime object when the default format is empty.
          #useDateTimeClass: {true}|false

          # Specify a custom DateTime subclass that you wish to have Propel use
          # for temporal values.
          #dateTimeClass: {DateTime}|string

          # These are the default formats that will be used when fetching values from
          # temporal columns in Propel. You can always specify these when calling the
          # methods directly, but for methods like getByName() it is nice to change
          # the defaults.
          # To have these methods return DateTime objects instead, you should set these
          # to empty values
          #defaultTimeStampFormat: {Y-m-d H:i:s}
          #defaultTimeFormat: { %X }|string
          #defaultDateFormat: { %x }|string

      objectModel:
          # Whether to add generic getter/setter methods.
          # Generic accessors are `getByName()`, `getByPosition(), ` and `toArray()`.
          #addGenericAccessors: {true}|false
          # Generic mutators are `setByName()`, `setByPosition()`, and `fromArray()`.
          #addGenericMutators: {true}|false
          #emulateForeignKeyConstraints: {false}|true
          #addClassLevelComment: {true}|false
          #defaultKeyType: {phpName}|string
          #addSaveMethod: {true}|false
          #namespaceMap: {Map}|string

          # Whether to add a timestamp to the phpdoc header of generated OM classes.
          # If you use a versioning system, don't set this to true, or the classes
          # will be committed too often with just a date change.
          #addTimeStamp: {false}|true

          # Whether to support pre- and post- hooks on `save()` and `delete()` methods.
          # Set to false if you never use these hooks for a small speed boost.
          #addHooks: {true}|false

          # Some sort of "namespacing": All Propel classes with get the Prefix
          # "My_ORM_Prefix_" just like "My_ORM_Prefix_BookTableMap".
          #classPrefix: {empty}|string

          # Identifier quoting may result in undesired behavior (especially in Postgres),
          # it can be disabled in DDL by setting this property to true.
          #disableIdentifierQuoting: {false}|true

          # Whether the generated `doSelectJoin*()` methods use LEFT JOIN or INNER JOIN
          # (see ticket:491 and ticket:588 to understand more about why this might be
          # important).
          #useLeftJoinsInDoJoinMethods: {true}|false

          # Pluralizer class (used to generate plural forms)
          # Use StandardEnglishPluralizer instead of DefaultEnglishPluralizer for better pluralization
          # (Handles uncountable and irregular nouns)
          #pluralizerClass: \Propel\Common\Pluralizer\StandardEnglishPluralizer

          # Builder classes
          #builders:
              #object: \Propel\Generator\Builder\Om\ObjectBuilder
              #objectstub: \Propel\Generator\Builder\Om\ExtensionObjectBuilder
              #objectmultiextend: \Propel\Generator\Builder\Om\MultiExtendObjectBuilder
              #tablemap: \Propel\Generator\Builder\Om\TableMapBuilder
              #query: \Propel\Generator\Builder\Om\QueryBuilder
              #querystub: \Propel\Generator\Builder\Om\ExtensionQueryBuilder
              #queryinheritance: \Propel\Generator\Builder\Om\QueryInheritanceBuilder
              #queryinheritancestub: \Propel\Generator\Builder\Om\ExtensionQueryInheritanceBuilder
              #interface: \Propel\Generator\Builder\Om\InterfaceBuilder
              # SQL builders
              #datasql: